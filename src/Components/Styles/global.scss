@use './pallet.scss';
@use './colors.scss';

@mixin defWidth {
    width: 95%;
}

@mixin CardContainers {
    @include defWidth();
    margin-bottom: 1em;
    background: white;
    border-radius: pallet.$border-radius-small;
    box-shadow: pallet.$box-shadow;
}

@mixin shadow {
    box-shadow: pallet.$box-shadow;
}

@mixin FlexRow {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
}

@mixin FlexColumn {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
}

@mixin fullWidthTitle {
    width: 100%;
    box-shadow: none;
    background: white;
    border-radius: 0;
    box-shadow: none;
}

@mixin titlePreSet {
    @include fullWidthTitle();
    padding: 0 1em;
    border-bottom: pallet.$borderAttrs;
}

@mixin tableRow {
    &:hover {
        background-color: pallet.$colorLightBlue;
    }
}

@mixin stickyTableHeader {
    position: sticky;
    z-index: 1;
    background-color: pallet.$colorDarkGrey;
    &:hover {
        background-color: pallet.$colorDarkGrey !important;
    }
}

@mixin bgChange($color:colors.$color-white) {
    background-color: $color;
}

@mixin colorChange($color:colors.$color-white) {
    color: $color;
}

@mixin fontSizeChange($font-size:25px){
    font-size: $font-size;
}

@mixin matrixIconTheme {
    .success {
        &::after {
            background: green;
        }
    }
    .success_dashed {
        &::after {
            background: green;
        }
    }
    .danger {
        &::after {
            background: red;
        }
    }
    .danger_dashed {
        &::after {
            background: red;
        }
    }
    .sum {
        &::after {
            background: gray;
        }
    }
    .sumAccuracy {
        &::after {
            background: lightgray;
        }
    }
    .primary {
        &::after {
            background: rgb(0, 115, 255);
        }
    }
}

@mixin matrixTheme{
    .success {
        background-color: rgba(0, 255, 68, 0.2);
        color: green;
        border: 1px solid rgb(0, 211, 56);
        &:hover{
            background-color: rgba(0, 255, 68, 0.3);
        }
    }
    .success_dashed {
        background-color: rgba(0, 255, 68, 0.2);
        color: green;
        border: 1px dashed rgb(0, 211, 56);
        &:hover{
            background-color: rgba(0, 255, 68, 0.3);
        }
    }
    .danger {
        background-color: rgba(255, 0, 0, 0.2);
        color: red;
        border: 1px solid rgba(255, 0, 0, 1);
        &:hover{
            background-color: rgba(255, 0, 0, 0.3);
        }
    }
    .danger_dashed {
        background-color: rgba(255, 0, 0, 0.2);
        color: red;
        border: 1px dashed rgba(255, 0, 0, 1);
        &:hover{
            background-color: rgba(255, 0, 0, 0.3);
        }
    }
    .sum {
        background-color: rgba(128, 128, 128, 0.2);
        border: 1px solid rgba(128, 128, 128, 0.2);
        &:hover{
            background-color: rgba(128, 128, 128, 0.3);
        }
    }
    .sumAccuracy {
        background-color: rgba(89, 89, 89, 0.9);
        color: pallet.$colorWhite;
        border: 1px solid rgba(89, 89, 89, 0.9);
        &:hover{
            background-color: rgba(89, 89, 89, 1);
        }
    }
    .primary {
        background-color: rgba(0, 166, 255, 0.2);
        color: rgb(0, 115, 255);
        border: 1px solid rgba(0, 166, 255, 1);
        &:hover{
            background-color: rgba(0, 166, 255, 0.3);
        }
    }
}

.titleCardGeneral{
    height: 5rem;
}

.bodyCardGeneral{
    height: 40rem;
}

.pageContainer {
    width: 100%;
    height: 100%;
    padding: 1em;
    display: grid;
    align-items: center;
    justify-items: center;
    background: pallet.$colorLightestBlue;
}

.rowField { // add to "containerClassName"
    flex-direction: row;
    align-items: center;
    // add "align-self: center;" to your component style if you need
}

